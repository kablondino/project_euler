%
% Problem 2: Even Fibonacci Numbers
% Each new term in the Fibonacci sequence is generated by adding the
% previous two terms. By starting with 1 and 2, the first 10 terms will be:
% 	1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
%
% By considering the terms in the Fibonacci sequence whose values do
% not exceed four million, find the sum of the even-valued terms.
%
clc; clear; close all;

the_sum = 0;
i = 2;	% Counter

while custom_fibonacci(i) <= 4.0e6
	if mod(custom_fibonacci(i), 2) == 0
		the_sum = the_sum + custom_fibonacci(i);
	end
	i = i + 1;
end

fprintf(['The sum of the even-valued terms of the Fibonacci sequence ', ...
	'up to 4 million is %d\n'], the_sum)


function Fib_number = custom_fibonacci( AN )
	% Produces the n-th Fibonacci number, by using the golden ratio
	if AN <= 0
		Fib_number = 0;
	else if AN == 1
		Fib_number = 1;
	else
		Fib_number = round(((1 + sqrt(5))^AN - (1 - sqrt(5))^AN) ...
			/ (2^AN * sqrt(5)));
	end
	end
end
