/*
 *	Problem 2: Even Fibonacci Numbers
 *	Each new term in the Fibonacci sequence is generated by adding the
 *	previous two terms. By starting with 1 and 2, the first 10 terms will be:
 *		1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 *	By considering the terms in the Fibonacci sequence whose values do
 *	not exceed four million, find the sum of the even-valued terms.
 */

package main

import ( "fmt" )

func isEven( x int ) bool {
	if x & 1 == 0 { return true }

	return false
}


func sumEvens( limit int ) int {
	sum := 0

	for i, j := 1, 1; j < limit; i, j = i + j, i {
		if isEven(i) {
			sum += i
		}
	}

	return sum
}


func main() {
	answer := sumEvens( 4000000 )

	fmt.Println("The sum of the even-valued terms of the Fibonacci sequence ",
		"up to 4 million is", answer)
}

