!
! Problem 2: Even Fibonacci Numbers
! Each new term in the Fibonacci sequence is generated by adding the
! previous two terms. By starting with 1 and 2, the first 10 terms will be:
! 	1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
!
! By considering the terms in the Fibonacci sequence whose values do
! not exceed four million, find the sum of the even-valued terms.

function F(AN) result Fib_number
    implicit none
    ! Calculates the Fibonacci numbers
    integer(kind=8), intent(in) :: AN

    if( AN <= 0 ) then
        Fib_number = 0
    else if( AN == 1 ) then
        Fib_number = 1
    else
        Fib_number =  ( (1.0 + SQRT(5.0))**AN - (1.0 - SQRT(5.0))**AN ) &
            / ( (2.0)**AN * SQRT(5.0) )
    endif
end function F


program problem2
    implicit none
    integer(kind=8) :: i

    do while( F(i) <= 4.0e6 )
        if( mod(F(i), 2) == 0 ) then
            the_sum = the_sum + F(i)
        endif
    enddo

    write(*,*) the_sum

end program problem2

